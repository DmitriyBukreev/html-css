@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");@import url("https://fonts.googleapis.com/css?family=Inter");a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{border:0;font-size:100%;font:inherit;margin:0;padding:0;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}.page{background:var(--background-secondary);height:100%}.header{background-color:var(--background-primary);padding:24px 0}@media only screen and (max-width:600px){.header{padding:17px 0}}.header__inner{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:grid;grid:"left center right"}.header__title{color:var(--text);font-family:Inter;font-size:50px;font-style:normal;font-weight:500;line-height:64px}@media only screen and (max-width:600px){.header__title{font-size:28px;font-weight:400;line-height:38px}}.header__menu{background-color:transparent;border:none;color:var(--text);display:none;outline:none}@media only screen and (max-width:600px){.header__menu{display:block;justify-self:left}}.header__theme-changer{grid-area:right;justify-self:right}@media only screen and (max-width:600px){.header__theme-changer{display:none}}.preview{background:var(--background-secondary);padding:68px 0 204px}.preview__inner{display:grid;gap:30px;grid-template-columns:repeat(auto-fit,minmax(300px,1fr))}.footer{background-color:var(--background-primary);padding-bottom:136px;padding-top:71px;text-align:center}.footer__inner{margin:0 auto;max-width:50%}@media only screen and (max-width:480px){.footer__inner{max-width:100%}}.footer__title{color:var(--text);font-size:38px;font-weight:500;line-height:48px;padding-bottom:32px}@media only screen and (max-width:480px){.footer__title{font-size:24px;font-weight:400;line-height:1.26;padding-bottom:24px}}.footer__description{color:var(--text);font-size:16px;font-weight:400;line-height:24px}.container{margin:0 auto;max-width:1110px;padding:0 16px}.card{background:var(--background-primary);border-radius:12px;-webkit-box-shadow:0 2px 4px rgba(33,36,41,.05);box-shadow:0 2px 4px rgba(33,36,41,.05);display:grid;grid-template-rows:1fr auto}.card:link{text-decoration:none}.card__body{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center;min-height:200px;padding:30px;pointer-events:none}.card__body_grid{-ms-flex-line-pack:center;align-content:center;display:grid;gap:16px 32px;grid-template-columns:repeat(2,auto)}.card__footer{border-top:2px solid transparent;padding:13px 0 32px;text-align:center}@media only screen and (max-width:600px){.card__footer{border-top-color:var(--grey-2)}}.card__title{font-size:21px;font-weight:500;line-height:25px;margin-bottom:6px}.card__title,.card__type{color:var(--text);font-family:Roboto;font-style:normal}.card__type{font-size:16px;font-weight:400;line-height:19px}.content{grid-column-gap:56px;display:grid;grid-template-columns:auto 1fr;padding:36px 0}@media only screen and (max-width:600px){.menu{display:none}}.component-description{background:var(--background-primary);border-radius:12px}#all-tab:checked~.tabs__scroller .tabs__label[for=all-tab],#containers-tab:checked~.tabs__scroller .tabs__label[for=containers-tab],#elements-tab:checked~.tabs__scroller .tabs__label[for=elements-tab],#templates-tab:checked~.tabs__scroller .tabs__label[for=templates-tab]{border-bottom-color:var(--text);color:var(--accent)}.tabs__content_all-tab,.tabs__content_containers-tab,.tabs__content_elements-tab,.tabs__content_templates-tab{display:none}#all-tab:checked~.tabs__content_all-tab,#containers-tab:checked~.tabs__content_containers-tab,#elements-tab:checked~.tabs__content_elements-tab,#templates-tab:checked~.tabs__content_templates-tab{display:block}.tabs{background:var(--background-primary)}.tabs__scrollable{display:-webkit-box;display:-ms-flexbox;display:flex;gap:40px;overflow-x:auto}.tabs__scrollable::-webkit-scrollbar{display:none}.tabs__label{border-bottom:5px solid transparent;color:var(--grey-3);display:block;font-family:Inter;font-size:16px;font-style:normal;font-weight:400;line-height:24px;padding-bottom:8px;white-space:nowrap}.tabs__input{clip:rect(0,0,0,0);outline:none;position:absolute}.tooltip{display:inline-block;position:relative}.tooltip__trigger{color:var(--text);cursor:pointer;display:block;height:24px;width:24px}.tooltip__bubble{background:var(--blue);border-radius:10px;color:var(--grey-2);display:none;font-family:Inter;font-size:16px;font-style:normal;font-weight:400;line-height:24px;padding:8px 21px;text-align:center;top:calc(100% + 8px);white-space:nowrap}.tooltip__bubble,.tooltip__bubble:before{left:50%;position:absolute;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.tooltip__bubble:before{border:10px solid transparent;border-bottom:10px solid var(--blue);bottom:100%;content:""}.tooltip__bubble_top{bottom:calc(100% + 8px);top:auto}.tooltip__bubble_top:before{border-bottom-color:transparent;border-top-color:var(--blue);top:100%}.tooltip__bubble_displayed,.tooltip__trigger:hover~.tooltip__bubble{display:block}.checkbox{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;position:relative}.checkbox__input{clip:rect(0,0,0,0);outline:none;position:absolute}.checkbox__state{cursor:pointer;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;gap:12px}.checkbox__control,.checkbox__state{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.checkbox__control{-webkit-box-pack:center;-ms-flex-pack:center;background:var(--background-primary);border:1px solid var(--grey-2);border-radius:4px;display:-webkit-box;display:-ms-flexbox;display:flex;height:28px;justify-content:center;width:28px}.checkbox__icon{color:var(--white);display:none;height:24px;width:24px}.checkbox__title{color:var(--text);font-family:Inter;font-size:16px;font-style:normal;font-weight:400;line-height:24px}.checkbox__input:checked~.checkbox__state .checkbox__control{background-color:var(--blue);border-color:var(--blue)}.checkbox__input:checked~.checkbox__state .checkbox__icon{display:block}.checkbox__input:focused~.checkbox__state .checkbox__title{text-decoration:underline}.checkbox__input:disabled~.checkbox__state .checkbox__control{background-color:var(--grey-2)}.checkbox__input:disabled~.checkbox__state{cursor:not-allowed}.radio{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;position:relative}.radio__input{clip:rect(0,0,0,0);position:absolute}.radio__state{cursor:pointer;gap:12px}.radio__control,.radio__state{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}.radio__control{-webkit-box-pack:center;-ms-flex-pack:center;background:var(--background-primary);border:1px solid var(--grey-2);border-radius:50%;height:28px;justify-content:center;width:28px}.radio__icon{background:var(--blue);border-radius:50%;display:none;height:18px;width:18px}.radio__title{color:var(--text);font-family:Inter;font-size:16px;font-style:normal;font-weight:400;line-height:24px}.radio__input:checked~.radio__state .radio__control{border:2px solid var(--blue)}.radio__input:checked~.radio__state .radio__icon{display:block}.radio__input:focus~.radio__state .radio__title{text-decoration:underline}.radio__input:disabled~.radio__state .radio__control{background-color:var(--grey-2)}.radio__input:disabled~.radio__state .radio__title{color:var(--grey-2)}.radio__input:disabled~.radio__state{cursor:not-allowed}.calendar{--day-color:#90a0b7;--selection-background:rgba(160,177,245,.2);background:var(--background-primary);border:1px solid var(--grey-3);border-radius:8px;min-width:200px;padding:28px 26px 40px}.calendar__title{color:var(--text);font-family:Inter;font-size:20px;font-style:normal;font-weight:600;line-height:24px;margin-bottom:24px;text-align:center}.calendar__wrapper{padding-bottom:100%;position:relative}.calendar__inner{bottom:0;display:grid;grid-template-columns:repeat(7,1fr);grid-template-rows:repeat(7,1fr);left:0;position:absolute;right:0;top:0}.calendar__item{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--text);display:-webkit-box;display:-ms-flexbox;display:flex;font-family:Inter;font-size:14px;font-style:normal;font-weight:400;justify-content:center;line-height:20px}.calendar__item_day{color:var(--day-color)}.calendar__item_active{background:var(--blue);color:var(--white)}.calendar__item_between-active{background-color:var(--selection-background)}.logo{color:var(--accent);height:32px;width:110px}@media only screen and (max-width:600px){.logo{justify-self:center}}.icon{height:24px;width:24px}.toggler{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;position:relative}.toggler__input{clip:rect(0,0,0,0);position:absolute}.toggler__state{-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex;gap:12px}.toggler__control{background:var(--background-primary);border:1px solid var(--grey-2);border-radius:16px;display:inline;height:28px;position:relative;-webkit-transition:background-color .2s ease-in;-o-transition:background-color .2s ease-in;transition:background-color .2s ease-in;width:52px}.toggler__icon{background:var(--grey-2);border-radius:50%;height:24px;margin:0 2px;position:absolute;top:2px;-webkit-transition-duration:.2s;-o-transition-duration:.2s;transition-duration:.2s;-webkit-transition-property:background-color,-webkit-transform;transition-property:background-color,-webkit-transform;-o-transition-property:transform,background-color;transition-property:transform,background-color;transition-property:transform,background-color,-webkit-transform;width:24px}.toggler__input:checked~.toggler__state .toggler__control{background-color:var(--blue);border-color:var(--blue)}.toggler__input:checked~.toggler__state .toggler__icon{background-color:var(--white);-webkit-transform:translateX(24px);-ms-transform:translateX(24px);transform:translateX(24px)}.toggler__input:focus~.toggler__state .toggler__title{text-decoration:underline}.toggler__input:disabled~.toggler__state .toggler__control{background-color:var(--grey-2)}.toggler__inputdisabled~.toggler__state .toggler__icon{background-color:var(--grey-3);opacity:.25}.toggler__inputdisabled~.toggler__state{cursor:not-allowed}.toggler__before{color:var(--black)}.toggler__after,.toggler__input:checked~.toggler__state .toggler__before{color:var(--grey-3)}.toggler__input:checked~.toggler__state .toggler__after{color:var(--white)}.burger-menu{background-color:var(--background-primary);height:100vh;left:0;position:fixed;top:0;-webkit-transform:translateX(-100vw);-ms-transform:translateX(-100vw);transform:translateX(-100vw);-webkit-transition:-webkit-transform .2s linear;transition:-webkit-transform .2s linear;-o-transition:transform .2s linear;transition:transform .2s linear;transition:transform .2s linear,-webkit-transform .2s linear;width:100vw;z-index:100}.burger-menu[data-open]{-webkit-transform:none;-ms-transform:none;transform:none}.burger-menu__button{background-color:transparent;border:none;outline:none}.burger-menu__button_close{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;align-items:center;color:var(--text);display:-webkit-box;display:-ms-flexbox;display:flex;height:32px;justify-content:center;justify-self:left;width:32px}.burger-menu__button_close:hover{background-color:var(--grey-2);border-radius:50%}.burger-menu__header{display:grid;grid:"left center right";padding:16px 0}.burger-menu__theme-changer{-webkit-box-pack:justify;-ms-flex-pack:justify;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:space-between;padding:16px 0}.burger-menu__section{padding:16px 0}.burger-menu__item{color:var(--text);display:block;font-size:16px;line-height:24px}.burger-menu__item,.burger-menu__title{font-family:Inter;font-style:normal;font-weight:400;padding:8px 0}.burger-menu__title{color:var(--grey-3);font-size:20px;line-height:26px}.separator{background-color:var(--grey-2);height:1px}:root{--white:#fff;--black:#212429;--pink:#f784ad;--purple:#7048e8;--blue:#4263eb;--red:#f03d3e;--grey-1:#f8f9fa;--grey-2:#dde2e5;--grey-3:#acb5bd;--grey-4:#495057;--error:var(--red);--success:var(--blue);--background-primary:var(--white);--background-secondary:var(--grey-1);--text:var(--black);--accent:var(--black)}html[data-theme-dark]{--background-primary:var(--black);--background-secondary:var(--grey-4);--text:var(--grey-3);--accent:var(--white)}body{font-family:Roboto,sans-serif}body,html{height:100%}
/*# sourceMappingURL=data:application/json;base64, */